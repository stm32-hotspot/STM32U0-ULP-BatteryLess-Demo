/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#ifndef TOUCHGFX_APPLICATIONFONTPROVIDER_HPP
#define TOUCHGFX_APPLICATIONFONTPROVIDER_HPP

#include <touchgfx/FontManager.hpp>

namespace touchgfx
{
class FlashDataReader;
}

struct Typography
{
    static const touchgfx::FontId DEFAULT = 0;
    static const touchgfx::FontId LARGE = 1;
    static const touchgfx::FontId SMALL = 2;
    static const touchgfx::FontId TITLE = 3;
};

struct TypographyFontIndex
{
    static const touchgfx::FontId DEFAULT = 0; // verdana_11_4bpp
    static const touchgfx::FontId LARGE = 1;   // verdana_25_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const touchgfx::FontId TITLE = 3;   // verdanab_24_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
{
public:
    virtual touchgfx::Font* getFont(touchgfx::FontId typography);

    static void setFlashReader(touchgfx::FlashDataReader* flashReader)
    {
        fontFlashReader = flashReader;
    }

    static touchgfx::FlashDataReader* getFlashReader()
    {
        return fontFlashReader;
    }

private:
    static touchgfx::FlashDataReader* fontFlashReader;
};

#endif // TOUCHGFX_APPLICATIONFONTPROVIDER_HPP
